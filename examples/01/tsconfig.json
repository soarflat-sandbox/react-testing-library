{
  "compilerOptions": {
    // トランスパイル後の ECMAScript のバージョン
    "target": "ES2019",

    // ESM は webpack が変形する
    "module": "es2015",

    // コンパイルする際に使用する組み込みライブラリ
    "lib": ["es2018", "dom"],

    // JSX のモード
    // 選択したモードによって、JSX がコンパイルされて出力されるものが異なる
    "jsx": "react",

    // 相対パスではないモジュールは node_modules 配下を検索する
    "moduleResolution": "node",

    // 絶対パスではないモジュール名を解決する時にベースとなるディレクトリ
    "baseUrl": "./",

    // エイリアス
    "paths": {
      // 例: src/utils/history -> @/utils/history（baseUrl が ./ の場合）
      "@/*": ["src/*"]
    },

    /* ES modules 形式以外の、CommonJS 形式などのモジュールを default import 形式で読み込める
       例）const module = require('module') -> import module from 'module' */
    "esModuleInterop": true,

    // すべての型定義ファイル（*.d.ts）の型チェックをスキップする
    // 使い所に関しては以下を参照。要は型が提供されていなかったり、型の更新が間に合っていないライブラリの型エラーが発生するのを防ぐ。
    // https://stackoverflow.com/questions/52311779/usage-of-the-typescript-compiler-argument-skiplibcheck
    "skipLibCheck": true,

    /* 厳格な型チェックオプション（noImplicitAny、noImplicitThis、alwaysStrict、
       strictBindCallApply、strictNullChecks、strictFunctionTypes、
       strictPropertyInitialization）を有効化する */
    "strict": true
  },
  "include": ["src/**/*", "__tests__/**/*"]
}
